#------------------------------------------------------------------------------#
# · Very Simple Rock Paper Scissors Game
# · System Logoff
# · Note, sissors was a typo that stuck with me this game. :v
#------------------------------------------------------------------------------#

#------------------------------------------------------------------------------#
# · Alias/Const Data
# · Note ve/vf are used for lazy ><= += -= stuff.
#------------------------------------------------------------------------------#

:alias random_cpu vd
:alias cpu_choice vc
:alias player_choice vb
:alias game_mode va
:alias sprx v9
:alias spry v8
:alias game_count v7
:alias title_count v7
:alias keypressed v6
:alias winorlose v5
:alias xx v5
:alias xxx v4
:alias xxxx v3
:alias score3 v2
:alias score2 v1
:alias score v0

#------------------------------------------------------------------------------#
# · Sprite Data
#------------------------------------------------------------------------------#
: rock
0x3C 0x42 0xA1 0x8B 0x95 0x8B 0x56
0x3C 0x00 0x00 0x00 0x00 0x00 0x00
  
: paper
0x78 0x4C 0x4E 0x42 0x42 0x42 0x42
0x7E 0x00 0x00 0x00 0x00 0x00 0x00

: sissors
0xC3 0xA5 0x66 0x3C 0x18 0x66 0xC3
0x81 0x00 0x00 0x00 0x00 0x00 0x00

: sx_title # (256 bytes)
0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF
0xFF 0xFF 0xFF 0xFF 0xFF 0x9F 0x3F 0x5F
0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFC 0xC0
0xFF 0xFF 0xFF 0x7F 0x3F 0x1F 0x0F 0x07
0xFF 0xFF 0xFF 0xFE 0xFC 0xF8 0xF0 0xE0
0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0x3F 0x03
0xFF 0xFF 0xFF 0xFF 0xFF 0xF9 0xFC 0xFA
0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF
0xFF 0xFF 0xFF 0x03 0x3B 0xC7 0x3F 0xFF
0x7F 0xBF 0x7F 0x00 0x00 0x01 0x1E 0x01
0x00 0x70 0xFD 0xF8 0x88 0x00 0xB0 0xF8
0x00 0x00 0xE0 0xF3 0x73 0x37 0x77 0xE7
0x00 0x00 0xCF 0xEF 0xEE 0xEE 0xCE 0x8F
0x00 0x07 0x8F 0x0F 0x0F 0x1C 0x1D 0x1F
0xFE 0xFD 0xFE 0x00 0x00 0x80 0x78 0x80
0xFF 0xFF 0xFF 0xC0 0xDC 0xE3 0xFC 0xFF
0xFF 0xFF 0xFF 0x1F 0x03 0xFB 0x07 0xFF
0x1F 0x0F 0x01 0x00 0x00 0xFF 0x80 0x7F
0xFC 0x38 0xF8 0xF8 0xE0 0x01 0x00 0x00
0xC3 0x00 0x01 0x03 0x03 0x00 0x00 0x02
0x8F 0xCE 0xEE 0xEE 0xCE 0x8C 0x00 0x40
0x1F 0x1F 0x1D 0x1C 0x1C 0x84 0x00 0x00
0xF8 0xF0 0x80 0x00 0x00 0xFF 0x01 0xFE
0xFF 0xFF 0xFF 0xF8 0xC0 0xDF 0xE0 0xFF
0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF
0x3F 0x3F 0x9F 0x7F 0xFF 0xFF 0xFF 0xFF
0xE0 0x1C 0xE3 0xFC 0xFF 0xFF 0xFF 0xFF
0x05 0x0A 0x17 0x2F 0x5F 0xBF 0x7F 0xFF
0xA0 0x50 0xE8 0xF4 0xFA 0xFD 0xFE 0xFF
0x07 0x38 0xC7 0x3F 0xFF 0xFF 0xFF 0xFF
0xFC 0xFC 0xF9 0xFE 0xFF 0xFF 0xFF 0xFF
0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF

: sx_battle
0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF
0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF
0x05 0x0B 0x17 0x2F 0x5F 0xBF 0x7F 0xFF
0xE0 0xC0 0x80 0x00 0x00 0x00 0x01 0x00
0xFF 0xFF 0xFF 0xFF 0xFE 0xFC 0x7C 0xFA
0x5F 0x2F 0x17 0x0B 0x05 0x02 0x01 0x00
0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
0x00 0x00 0xF8 0x04 0x06 0x06 0x06 0x06
0x00 0x00 0x1F 0x20 0x20 0x20 0x20 0x20
0x00 0x80 0x40 0xA0 0xD0 0xF0 0xE0 0xC0
0xFD 0xFE 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF
0xFF 0xFF 0xFF 0x07 0x05 0x05 0x05 0x05
0xFF 0xFF 0xFF 0xE0 0xE0 0xE0 0xE0 0xE0
0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF
0x00 0x00 0x00 0x00 0x00 0x00 0xFC 0x02
0x06 0x06 0x06 0x06 0x06 0xCE 0xEC 0x1D
0x20 0x20 0x20 0x20 0x20 0x1F 0x0F 0x00
0x80 0x00 0x00 0x00 0x00 0x00 0x00 0x80
0xFF 0xFF 0xFE 0xFC 0xFC 0xFA 0xFD 0xFE
0x05 0x05 0x05 0x05 0x05 0xFD 0x03 0xFF
0xE0 0xE0 0xE0 0xE0 0xE0 0x73 0x36 0xBD
0xFF 0xFF 0xFF 0xFF 0xFF 0x80 0x3F 0x40
0x4A 0x4A 0x02 0x02 0x7A 0x02 0xFC 0x00
0x09 0x01 0x01 0x01 0x01 0x01 0x00 0x00
0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
0x40 0xA0 0xD0 0xF0 0xE0 0xC0 0x80 0x00
0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF
0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF
0xBF 0xBF 0xBF 0xBF 0xBF 0xBF 0x3F 0x7F
0x7F 0x7F 0x40 0x40 0x5E 0x40 0x3F 0x80

: sx_help # (256 bytes)
0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0x4F 0x87
0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFE
0xFF 0x71 0x75 0x71 0x17 0xFF 0xE9 0xD0
0xFF 0x51 0x17 0x53 0x51 0xFF 0xFF 0x3F
0xFF 0x1F 0x3F 0xDF 0x1F 0xFF 0xFE 0xFD
0xFF 0x11 0x55 0x31 0x57 0xFF 0xDF 0xA7
0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF
0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFB 0xF4
0x03 0x01 0x00 0x00 0x00 0x00 0x80 0x00
0x7D 0x3A 0x14 0x08 0x00 0x00 0xBB 0xAA
0xA0 0x40 0x80 0x00 0x00 0x00 0xBB 0x22
0x1F 0x0F 0x06 0x03 0x00 0x00 0xBB 0x12
0xFA 0xF4 0xE8 0x50 0x20 0x00 0x3B 0xA2
0x43 0x81 0x00 0x00 0x00 0x00 0xD5 0x18
0x7F 0x3E 0x1D 0x0A 0x04 0x00 0xDD 0x55
0xE8 0xD0 0xA0 0x40 0x80 0x00 0x01 0x01
0x80 0x80 0x00 0x00 0xE0 0xA0 0xC0 0xA0
0xB1 0xAB 0x00 0x00 0xEE 0xA8 0xEC 0x8E
0x9A 0xBB 0x00 0x00 0xEE 0xAA 0xEE 0x8A
0x11 0xBB 0x00 0x00 0x74 0x42 0x34 0x70
0x1A 0x3B 0x00 0x00 0x77 0x55 0x56 0x75
0x15 0xD4 0x00 0x00 0x77 0x44 0x33 0x77
0x95 0x5D 0x00 0x00 0x77 0x42 0x42 0x77
0x01 0x01 0x00 0x00 0x07 0x04 0x03 0x07
0x00 0x00 0x00 0x00 0x00 0x00 0x00 0xFF
0x00 0x00 0xA0 0xC0 0xA0 0xA0 0x00 0xFF
0x00 0x00 0xEE 0xA8 0xA8 0xEE 0x00 0xFF
0x00 0x00 0x4E 0x2A 0x4C 0x0A 0x00 0xFF
0x00 0x00 0x77 0x45 0x66 0x75 0x00 0xFF
0x00 0x00 0x77 0x55 0x77 0x54 0x00 0xFF
0x00 0x00 0x07 0x05 0x07 0x04 0x00 0xFF
0x00 0x00 0x00 0x00 0x00 0x00 0x00 0xFF

: sx_help2 # (256 bytes)
0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0x4F 0x87
0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFE
0xFF 0x71 0x75 0x71 0x17 0xFF 0xE9 0xD0
0xFF 0x51 0x17 0x53 0x51 0xFF 0xFF 0x3F
0xFF 0x1F 0x3F 0xDF 0x1F 0xFF 0xFE 0xFD
0xFF 0x11 0x55 0x31 0x57 0xFF 0xDF 0xA7
0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF
0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFB 0xF4
0x03 0x01 0x00 0x00 0x00 0x00 0x00 0x00
0x7D 0x3A 0x14 0x08 0x30 0x50 0x60 0xC0
0xA0 0x40 0x80 0x00 0x0C 0x0A 0x06 0x03
0x1F 0x0F 0x06 0x03 0x80 0xC0 0xE0 0x20
0xFA 0xF4 0xE8 0x50 0x27 0x04 0x04 0x04
0x43 0x81 0x00 0x00 0x00 0xC0 0x20 0x10
0x7F 0x3E 0x1D 0x0A 0x04 0x03 0x04 0x0A
0xE8 0xD0 0xA0 0x40 0x80 0x00 0x00 0x00
0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
0x80 0x60 0x30 0x10 0x00 0x00 0xF0 0x10
0x01 0x06 0x0C 0x08 0x00 0x00 0x0F 0x08
0x20 0x20 0x20 0xE0 0x00 0x00 0xF0 0x10
0x04 0x04 0x04 0x07 0x00 0x00 0x0F 0x08
0xB0 0x50 0xB0 0x60 0xC0 0x00 0xF0 0x10
0x08 0x09 0x08 0x05 0x03 0x00 0x0F 0x08
0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
0x00 0x00 0x00 0x00 0x00 0x00 0x00 0xFF
0xD0 0x10 0x10 0xD0 0x10 0xF0 0x00 0xFF
0x0B 0x0A 0x0A 0x0B 0x08 0x0F 0x00 0xFF
0x50 0x90 0x90 0x50 0x10 0xF0 0x00 0xFF
0x0A 0x09 0x09 0x0A 0x08 0x0F 0x00 0xFF
0xD0 0x90 0x10 0xD0 0x10 0xF0 0x00 0xFF
0x0B 0x08 0x09 0x0B 0x08 0x0F 0x00 0xFF
0x00 0x00 0x00 0x00 0x00 0x00 0x00 0xFF

: sx_ohgod # (256 bytes)
        0x00 0xDE 0x5C 0xD0 0x9E 0x00 0x00 0x00
        0x00 0x7B 0x4A 0x4B 0x7A 0x00 0x00 0xE8
        0x00 0xEF 0x08 0xE8 0xEF 0x00 0x00 0xBD
        0x00 0x79 0x49 0x79 0x48 0x00 0x00 0xF7
        0x00 0xDE 0x48 0x48 0xC8 0x00 0x00 0xBC
        0x00 0x7B 0x42 0x4A 0x7B 0x00 0x00 0x97
        0x00 0xD2 0x52 0x52 0xDE 0x00 0x00 0x1E
        0x00 0x4B 0x4A 0x7A 0x23 0x00 0x00 0x00
        0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
        0x28 0x20 0xE8 0x00 0x00 0xBC 0xA4 0xBC
        0xA5 0xA5 0xBD 0x00 0x00 0xF7 0x84 0xE4
        0x24 0x24 0xF7 0x00 0x00 0xBC 0x20 0x3C
        0x24 0x3C 0xA8 0x00 0x00 0xD5 0xB6 0x95
        0x97 0x94 0x67 0x00 0x00 0x5E 0x52 0xDE
        0x12 0x12 0x1E 0x00 0x00 0x7A 0x22 0x23
        0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
        0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
        0xA8 0x00 0x00 0x40 0x40 0x00 0x40 0x00
        0x87 0x00 0x00 0xAF 0x68 0x29 0x2F 0x00
        0x9C 0x00 0x00 0xBD 0x91 0x91 0x3D 0x00
        0x94 0x00 0x00 0xF4 0x94 0xF7 0x92 0x00
        0x52 0x00 0x00 0xD0 0x50 0xD0 0x1E 0x00
        0x22 0x00 0x00 0x03 0x02 0x03 0x02 0x00
        0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
        0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
        0x00 0x7A 0x72 0x40 0x7A 0x00 0x00 0x00
        0x00 0xEE 0x89 0x89 0xEE 0x00 0x00 0x00
        0x00 0xBD 0x20 0x3C 0x1D 0x00 0x00 0x00
        0x00 0x97 0x92 0x92 0xF2 0x00 0x00 0x00
        0x00 0x9E 0x92 0x92 0x9E 0x00 0x00 0x00
        0x00 0xF7 0x84 0x94 0xF7 0x00 0x00 0x00
        0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00


: sx_win1
0x8A 0x8A 0xAA 0xAA 0xDA 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 

: sx_win2
0x88 0xC8 0xA8 0x98 0x88 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00

: sx_lose1
0x8E 0x8A 0x8A 0x8A 0xEE 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00

: sx_lose2
0xEE 0x88 0xEC 0x28 0xEE 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 

: sx_tie1
0xEB 0x4A 0x4B 0x4A 0x4B 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 

: sx_tie2
0x80 0x00 0x00 0x00 0x80 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 

: sx_frown
0x60 0x60

: sx_smile
0x90 0x90

: sx_meh
0x48 0x84

: sx_boop
0x90
#------------------------------------------------------------------------------#
# · Main Loop
#------------------------------------------------------------------------------#
: main
	loop
		random_cpu := random 0xff #// Create Random Number 
		if game_mode == 0 then title
		if game_mode == 1 then hlp1
		if game_mode == 2 then hlp2
		if game_mode == 3 then draw_battle
		if game_mode == 4 then body
		if game_mode == 5 then ohgod
		again
	return 
	



#------------------------------------------------------------------------------#
# · Title Screen || RPS!
#------------------------------------------------------------------------------#

: title
	i := sx_title
	draw_fullscreen
	
	loop 
		keypressed := key # Did they press ANYTHING?
		if keypressed >= 0 then game_mode := 1
		if keypressed >= 0 then clear
        	if keypressed >= 0 then return
	
	again
	return



#------------------------------------------------------------------------------#
# · Help Screen 1 
#------------------------------------------------------------------------------#

: hlp1
	i := sx_help
	draw_fullscreen
	
	loop 
		keypressed := key # Did they press ANYTHING?
		if keypressed >= 0 then game_mode := 2
		if keypressed >= 0 then clear
        	if keypressed >= 0 then return
	
	again
	return
#------------------------------------------------------------------------------#
# · Help Screen 2 
#------------------------------------------------------------------------------#
: hlp2
	i := sx_help2
	draw_fullscreen
	
	loop 
		keypressed := key # Did they press ANYTHING?
		if keypressed >= 0 then game_mode := 3
		if keypressed >= 0 then clear
        	if keypressed >= 0 then return
	
	again
	return
#------------------------------------------------------------------------------#
# · No life Screen
#------------------------------------------------------------------------------#
: ohgod
	i := sx_ohgod
	draw_fullscreen
	
	loop 
		keypressed := key # Did they press ANYTHING?
		if keypressed >= 0 then game_mode := 5
		if keypressed >= 0 then clear
        	if keypressed >= 0 then return
	
	again
	return

#------------------------------------------------------------------------------#
# · Battle Screen Draw
#------------------------------------------------------------------------------#

: draw_battle
	i := sx_battle
		draw_fullscreen
		game_mode := 4
		draw_score
	return



#------------------------------------------------------------------------------#
# · Draw Full Screen Image
#------------------------------------------------------------------------------#
: draw_fullscreen
	sprx := 56  # x
	spry := 0   # y 	
	title_count := 8   # stride
	
	
	loop
		sprite sprx spry 8
		i  += title_count
		sprx += -8
		if sprx == -8 then spry +=  8
		if sprx == -8 then sprx := 56
		if spry != 32 then
	again
return


#------------------------------------------------------------------------------#
# · Gameplay Loop
#------------------------------------------------------------------------------#
: body
	# What Did the CPU Pick?	
	if random_cpu >= 0x0 then cpu_choice := 1		
	if random_cpu >= 0x56 then cpu_choice := 2 		
	if random_cpu >= 0xAB then cpu_choice := 3
	
	# Reset What the Player Picked Last Time
	player_choice := 0	

	# Delay When You Finish A Game
	game_count := 0

	# Player Choice Loop
	loop
	keypressed := key # Did they press ANYTHING?
	if keypressed == 0xA then player_choice := 1
	if keypressed == 0x0 then player_choice := 2
	if keypressed == 0xB then player_choice := 3
	if player_choice == 0 then again

	# Draw Player Choice
	draw_p_sel

	# Draw Computer Choice
	draw_c_sel

	# Draw WinORLoseORTie
 	wintieloselogic

	# Draw Emotes
	draw_emotes

	#draw_Update_score
	
	if winorlose == 1 begin
	draw_score
	score += 1 #score goes up
	draw_score
	end
	

	: in_delay
	# Delay to absorb win/loss sprite
	loop

		game_count += 1
		if game_count != 160 then again
		# If the count is done, remove drawn sprites
		draw_p_sel
		draw_c_sel
		wintieloselogic
		draw_emotes
		
		#clear
	return

#------------------------------------------------------------------------------#
# · Draw Commands
#------------------------------------------------------------------------------#
#------------------------------------------------------------------------------#
# · DRAW PLAYER SELECTION
#------------------------------------------------------------------------------#
: draw_p_sel
	# Load Image for Player Sprite
	if player_choice >= 0x1 then i := rock
	if player_choice >= 0x2 then i := paper
	if player_choice >= 0x3 then i := sissors

	# Draw Player Sprite
	sprx := 44
	spry := 12
	sprite sprx spry 8
return
#------------------------------------------------------------------------------#
# · DRAW CPU SELECTION
#------------------------------------------------------------------------------#
: draw_c_sel

	# Load Image for CPU Sprite
	if cpu_choice >= 0x1 then i := rock
	if cpu_choice >= 0x2 then i := paper
	if cpu_choice >= 0x3 then i := sissors

	# Draw CPU Sprite
	sprx := 12
	spry := 12
	sprite sprx spry 8
return
#------------------------------------------------------------------------------#
# · Win Tie Or Lose Logic
#------------------------------------------------------------------------------#
: wintieloselogic
	# Player Picks Rock
	if player_choice == 1 begin
		if cpu_choice == 1 begin
		draw_tie
		end
		if cpu_choice == 2 begin
		draw_lose
		end	
		if cpu_choice == 3 begin
		draw_win
		end
	end
	#Player Picks Paper
	if player_choice == 2 begin
		if cpu_choice == 2 begin
		draw_tie
		end
		if cpu_choice == 3 begin
		draw_lose
		end	
		if cpu_choice == 1 begin
		draw_win
		end
	end
	#Player Picks Sissors
	if player_choice == 3 begin
		if cpu_choice == 3 begin
		draw_tie
		end
		if cpu_choice == 1 begin
		draw_lose
		end	
		if cpu_choice == 2 begin
		draw_win
		end
	end
return
#------------------------------------------------------------------------------#
# · LOSE TEXT
#------------------------------------------------------------------------------#
: draw_lose
	#Draw Lose1
	i := sx_lose1
	sprx := 1
	spry := 1
	sprite sprx spry 5

	#Draw Lose2
	i := sx_lose2
	sprx := 9
	spry := 1
	sprite sprx spry 5

	#loseflag
	winorlose := 0
return
#------------------------------------------------------------------------------#
# · WIN TEXT
#------------------------------------------------------------------------------#
: draw_win
	#Draw Win1
	i := sx_win1
	sprx := 1
	spry := 1
	sprite sprx spry 5

	#Draw Win2
	i := sx_win2
	sprx := 9
	spry := 1
	sprite sprx spry 5
	winorlose := 1
return

#------------------------------------------------------------------------------#
# · TIE TEXT
#------------------------------------------------------------------------------#
: draw_tie
	#Draw Tie1
	i := sx_tie1
	sprx := 1
	spry := 1
	sprite sprx spry 5

	#Draw Tie2
	i := sx_tie2
	sprx := 9
	spry := 1
	sprite sprx spry 5
	winorlose := 2	
return
#------------------------------------------------------------------------------#
# · Emotes
#------------------------------------------------------------------------------#
: draw_emotes
	if winorlose == 0 begin
	# We lost, We Frown
	i := sx_frown
	sprx := 57
	spry := 27
	sprite sprx spry 2
	
	# Computer Smiles
	i := sx_smile
	sprx := 3
	spry := 27
	sprite sprx spry 2
	end

	if winorlose == 1 begin
	# We Won, Smile
	i := sx_frown
	sprx := 3
	spry := 27
	sprite sprx spry 2
	
	# Computer Frowns
	i := sx_smile
	sprx := 57
	spry := 27
	sprite sprx spry 2
	end

	if winorlose == 2 begin
	# It's a tie, we're both meh
	i := sx_meh
	sprx := 56
	spry := 24
	sprite sprx spry 2
	
	# Computer Meeeeeeeh.
	i := sx_smile
	sprx := 3
	spry := 28
	sprite sprx spry 1
	end
return
#------------------------------------------------------------------------------#
# · Draw Score
#------------------------------------------------------------------------------#
: draw_score
	if score == 0xa begin
	score2 += 1
	score := 0
	end
	
	if score2 == 0xa begin
	score3 += 1
	score2 := 0
	end
	if score3 == 0xa begin
	score3 := 0
	score2 := 0
	score := 0
	clear # Easter Egg Screen if you get 100 points
	game_mode := 5 # No one will ever see this :v
	main
	clear
	end	

	sprx := 58       # x position of first digit
    	spry := 1       # y position of first digit
    	i := hex score    # hundreds digit
    	sprite sprx spry 5

	sprx := 53       # x position of first digit
    	spry := 1       # y position of first digit
    	i := hex score2    # hundreds digit
    	sprite sprx spry 5

	sprx := 48       # x position of first digit
    	spry := 1       # y position of first digit
    	i := hex score3    # hundreds digit
    	sprite sprx spry 5

return
